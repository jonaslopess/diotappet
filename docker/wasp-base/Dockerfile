ARG GOLANG_IMAGE_TAG=1.18-bullseye

# Build stage
FROM golang:${GOLANG_IMAGE_TAG} AS build
ARG BUILD_TAGS=rocksdb
ARG BUILD_LD_FLAGS=""
ARG BUILD_TARGET="."

LABEL org.label-schema.description="Wasp"
LABEL org.label-schema.name="iotaledger/wasp"
LABEL org.label-schema.schema-version="1.0"
LABEL org.label-schema.vcs-url="https://github.com/iotaledger/wasp"

# Ensure ca-certificates are up to date
RUN update-ca-certificates

# Set the current Working Directory inside the container
RUN mkdir /scratch
WORKDIR /scratch

# Prepare the folder where we are putting all the files
RUN mkdir /app
RUN mkdir /app/waspdb

# Make sure that modules only get pulled when the module file has changed
COPY go.mod go.sum ./

# Download go modules
RUN go mod download
RUN go mod verify

# Project build stage
COPY . .

# Build the binary
RUN go build -o /app/wasp -a -tags="$BUILD_TAGS" -ldflags="${BUILD_LD_FLAGS}" ${BUILD_TARGET}

# Wasp build
FROM base

EXPOSE 7000/tcp
EXPOSE 9090/tcp
EXPOSE 5550/tcp
EXPOSE 4000/udp
EXPOSE 6060/tcp

EXPOSE 8545/tcp

# Copy the app dir into distroless image
COPY --from=build /app /app
COPY --from=build /app/waspdb /app/waspdb

WORKDIR /app


